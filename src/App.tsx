import { getName } from "@tauri-apps/api/app";
import { basename } from "@tauri-apps/api/path";
import { invoke } from "@tauri-apps/api/tauri";
import { appWindow } from "@tauri-apps/api/window";
import MDEditor, { PreviewType, commands } from "@uiw/react-md-editor";
import { useEffect, useState } from "react";
import "./App.css";
import { about } from "./commands/about";
import { closeWindow } from "./commands/closeWindow";
import { format } from "./commands/format";
import { isFileOpen, openFile } from "./commands/openFile";
import { saveFile } from "./commands/saveFile";
import { toggleAlwaysOnTop } from "./commands/toggleAlwaysOnTop";
import * as zoom from "./commands/zoom";

function App() {
  const [contents, setContents] = useState<string>("");
  const [preview, setPreview] = useState<PreviewType>("edit");
  const [hiddenToolbar, setHiddenToolbar] = useState(false);
  const [fileName, setFileName] = useState("Untitled ‚óè");
  const [filePath, setFilePath] = useState("");

  /**
   * „Éï„Ç°„Ç§„É´„ÅÆ‰∏≠Ë∫´„Çí‰øùÂ≠ò„Åô„Çã
   * @param contents „Éï„Ç°„Ç§„É´„ÅÆ‰∏≠Ë∫´
   */
  function write(contents: string) {
    invoke("write_file", { contents: contents });
    setContents(contents);
  }

  /**
   * „Éï„Ç°„Ç§„É´Âêç„Å®„Éë„Çπ„ÇíË°®Á§∫„Åô„Çã„Ç≥„Éû„É≥„Éâ
   */
  const filename = {
    name: "file name",
    keyCommand: "file name",
    buttonProps: {
      title: `${filePath}`,
    },
    icon: <span id="titlebar-file-name">{fileName}</span>,
  };

  window.onblur = () => {
    // Èñã„ÅÑ„Åü„Éï„Ç°„Ç§„É´„ÅÆ‰∏≠Ë∫´„ÅåË°®Á§∫„Åï„Çå„Å™„ÅÑ„Åü„ÇÅ„ÄÅ"Èñã„Åè"„ÉÄ„Ç§„Ç¢„É≠„Ç∞„ÅåÈñã„Åã„Çå„Å¶„ÅÑ„ÇãÂ†¥Âêà„ÅØ„Éó„É¨„Éì„É•„Éº„ÇíË°®Á§∫„Åó„Å™„ÅÑ
    if (isFileOpen) return;

    setPreview("preview");
  };

  window.onfocus = () => {
    setPreview("edit");
  };

  window.addEventListener("mouseover", () => {
    setHiddenToolbar(false);

    // „ÉÑ„Éº„É´„Éê„Éº„Çí„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å´„Åô„Çã
    let toolbar = document.querySelector(".w-md-editor-toolbar");
    toolbar?.setAttribute("data-tauri-drag-region", "");

    // „Éï„Ç°„Ç§„É´Âêç„Çí„Éâ„É©„ÉÉ„Ç∞ÂèØËÉΩ„Å´„Åô„Çã
    let filename = document.querySelector("#titlebar-file-name");
    filename?.setAttribute("data-tauri-drag-region", "");
  });

  window.addEventListener("mouseout", () => {
    setHiddenToolbar(true);
  });

  useEffect(() => {
    // „É™„É≠„Éº„ÉâÊôÇ„Å´„Éï„Ç°„Ç§„É´„ÇíË™≠„ÅøËæº„ÇÄ
    invoke("read_file").then((contents) => setContents(contents as string));
  }, []);

  useEffect(() => {
    // „Çø„Ç§„Éà„É´„Éê„Éº„ÅÆ„Éï„Ç°„Ç§„É´Âêç„Å®„Ç¶„Ç£„É≥„Éâ„Ç¶„ÅÆ„Çø„Ç§„Éà„É´„ÇíÊõ¥Êñ∞„Åô„Çã
    // „Ç¶„Ç£„É≥„Éâ„Ç¶„ÅÆ„Çø„Ç§„Éà„É´„ÅØ "„Éï„Ç°„Ç§„É´Âêç - „Ç¢„Éó„É™Âêç" „Å®„Åô„Çã
    invoke("get_path")
      .then((response) => {
        setFilePath(response as string);

        basename(response as string).then((basename) => {
          setFileName(basename);

          getName().then((name) => {
            appWindow.setTitle(`${basename} - ${name}`);
          });
        });
      })
      .catch(() => {
        // VSCode„ÅÆ„Çà„ÅÜ„Å´„ÄÅ„Çø„Ç§„Éà„É´„Éê„Éº„ÅÆ„Éï„Ç°„Ç§„É´Âêç„ÅÆÂæå„Çç„Å´‚óè„Çí„Å§„Åë„ÄÅ
        // „Ç¶„Ç£„É≥„Éâ„Ç¶„ÅÆ„Çø„Ç§„Éà„É´„ÅØ "‚óè Untitled - „Ç¢„Éó„É™Âêç" „Å®„Åô„Çã
        setFileName("Untitled ‚óè");
        setFilePath("");

        getName().then((name) => {
          appWindow.setTitle(`‚óè  Untitled - ${name}`);
        });
      });
  }, [contents]);

  return (
    <div className="container">
      <MDEditor
        value={contents}
        onChange={(contents) => write(contents as string)}
        fullscreen={true}
        preview={preview}
        hideToolbar={hiddenToolbar}
        commands={[
          commands.group([openFile, saveFile], {
            name: "file",
            groupName: "file",
            icon: (
              <span id="titlebar-title" style={{ filter: "grayscale(100%)" }}>
                üìÇ
              </span>
            ),
            buttonProps: {
              "aria-label": "File",
              title: "File",
            },
          }),
          commands.group(
            [commands.comment, commands.strikethrough, commands.hr, format],
            {
              name: "edit",
              groupName: "edit",
              icon: (
                <span id="titlebar-edit" style={{ filter: "grayscale(100%)" }}>
                  üìù
                </span>
              ),
              buttonProps: {
                "aria-label": "Edit",
                title: "Edit",
              },
            }
          ),
          commands.group([about], {
            name: "Help",
            groupName: "Help",
            icon: (
              <span id="titlebar-help" style={{ filter: "grayscale(100%)" }}>
                ‚ùì
              </span>
            ),
            buttonProps: {
              "aria-label": "Help",
              title: "Help",
            },
          }),
          filename,
        ]}
        extraCommands={[toggleAlwaysOnTop, closeWindow]}
        onWheel={zoom.handleWheel}
        onKeyDown={zoom.handleKeyDown}
        className="w-md-editor-fullscreen" // Â∏∏„Å´„Éï„É´„Çπ„ÇØ„É™„Éº„É≥„Å´„Åô„Çã
      />
    </div>
  );
}

export default App;
